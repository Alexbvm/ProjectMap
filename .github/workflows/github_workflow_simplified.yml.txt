name Build, Test and Deploy a .NET Core WebApi to Azure App Service

env # Change these settings when you need to
  ARTIFACT_NAME WebApi
  DOTNET_CORE_VERSION 9.0.x
  PUBLISH_DIRECTORY .outpublish
on
  push
    branches
      - main
      - deployment 
      - master

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch

jobs
  check # checking if the secrets exist (src httpsstackoverflow.comquestions72925899github-actions-detect-if-secret-exists)
      runs-on ubuntu-latest
      steps
        - name Check if AZURE_WEBAPP_NAME secret exists
          env 
            super_secret ${{ secrets.AZURE_WEBAPP_NAME }}
          if ${{ env.super_secret == '' }}
          run 'echo echo the secret AZURE_WEBAPP_NAME has not been made; echo please go to settings  Actions secrets and variables  actions to create it; exit 1;'
    
        - name Check if AZURE_WEBAPP_PUBLISH_PASSWORD secret exists
          env 
            super_secret ${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }}
          if ${{ env.super_secret == '' }}
          run 'echo echo the secret AZURE_WEBAPP_PUBLISH_PASSWORD has not been made; echo please go to settings  Actions secrets and variables  actions  to create it; exit 1;'
    
        - name Check if AZURE_WEBAPP_PUBLISH_USERNAME secret exists
          env 
            super_secret ${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }}
          if ${{ env.super_secret == '' }}
          run 'echo echo the secret AZURE_WEBAPP_PUBLISH_USERNAME has not been made; echo please go to settings  Actions secrets and variables  actions to create it; exit 1;'
    
        - name Check if WEBAPI_PROJECT_NAME secret exists
          env 
            super_secret ${{ secrets.WEBAPI_PROJECT_NAME }}
          if ${{ env.super_secret == '' }}
          run 'echo echo the secret WEBAPI_PROJECT_NAME has not been made; echo please go to settings  Actions secrets and variables  actions to create it; exit 1;'
        
  build

    runs-on ubuntu-latest
    needs check
    steps
    
    - uses actionscheckout@v4
    - name Setup .NET
      uses actionssetup-dotnet@v4
      with
        dotnet-version ${{env.DOTNET_CORE_VERSION}}

    - name Restore dependencies
      run dotnet restore
      
    - name Build
      run dotnet build --no-restore
    
    - name Test
      run dotnet test --no-build --verbosity normal
    
    - name Publish
      run dotnet publish .${{ secrets.WEBAPI_PROJECT_NAME }} --output ${{env.PUBLISH_DIRECTORY}} --configuration Release 
    
    - name Publish Artifacts
      uses actionsupload-artifact@v4
      with
        name ${{ env.ARTIFACT_NAME }}
        path ${{ env.PUBLISH_DIRECTORY}}

  deploy
    runs-on ubuntu-latest
    needs [check, build]
    steps

    - name Download artifact from build job
      uses actionsdownload-artifact@v4
      with
        name ${{ env.ARTIFACT_NAME }}
        path ${{ env.PUBLISH_DIRECTORY}}

     # Deploy to Azure Web apps
    - name 'Deploy to Azure App Service'
      uses azurewebapps-deploy@v3
      with 
        app-name ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile publishDatapublishProfile profileName=${{secrets.AZURE_WEBAPP_NAME}} - Zip Deploy publishMethod=ZipDeploy publishUrl=${{ secrets.AZURE_WEBAPP_NAME }}.scm.azurewebsites.net443 userName=${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }} userPWD=${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }} destinationAppUrl=http${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net SQLServerDBConnectionString= mySQLDBConnectionString= hostingProviderForumLink= controlPanelLink=httpsportal.azure.com webSystem=WebSitesdatabases publishProfilepublishData
        package '${{ env.PUBLISH_DIRECTORY}}'